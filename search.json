[{"path":"https://mtmorgan.github.io/DirichletMultinomial/articles/DirichletMultinomial.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"DirichletMultinomial for Clustering and Classification of Microbiome Data","text":"data used Homes et al. included package. read data matrix count samples taxa. figure shows distribution reads taxon, log scale.","code":"fl <- system.file(package=\"DirichletMultinomial\", \"extdata\", \"Twins.csv\") count <- t(as.matrix(read.csv(fl, row.names=1))) count[1:5, 1:3] #>         Acetanaerobacterium Acetivibrio Acetobacterium #> TS1.2                     0           0              0 #> TS10.2                    0           0              0 #> TS100.2                   0           0              0 #> TS100                     1           0              0 #> TS101.2                   0           0              0 cnts <- log10(colSums(count)) densityplot(     cnts, xlim=range(cnts),     xlab=\"Taxon representation (log 10 count)\" )"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/articles/DirichletMultinomial.html","id":"clustering","dir":"Articles","previous_headings":"","what":"Clustering","title":"DirichletMultinomial for Clustering and Classification of Microbiome Data","text":"dmn function fits Dirichlet-Multinomial model, taking input count data parameter kk representing number Dirichlet components model. fit count data values kk 1 7, displaying result k=4k = 4. sense model return value provided documentation R object fit, class ? DMN. return value can queried measures fit (Laplace, AIC, BIC); plotted different kk figure. best fit k=4k=4 distinct Dirichlet components.  addition laplace goodness fit can assessed AIC BIC functions. mixturewt function reports weight π\\pi homogeneity θ\\theta (large values homogeneous) fitted model. mixture returns matrix sample x estimated Dirichlet components; argument assign returns vector length equal number samples indicating component maximum value. fitted function describes contribution taxonomic group (point panels figure Dirichlet components; diagonal nature points panel suggest Dirichlet components correlated, perhaps reflecting overall numerical abundance.  posterior mean difference best single-component Dirichlet multinomial model measures component differs population average; sum measure total difference mean. table summarizes taxonomic contributions Dirichlet component. figure shows samples arranged Dirichlet component, samples placed component largest fitted value.","code":"if (full) {     fit <- mclapply(1:7, dmn, count=count, verbose=TRUE)     save(fit, file=file.path(tempdir(), \"fit.rda\")) } else data(fit) fit[[4]] #> class: DMN  #> k: 4  #> samples x taxa: 278 x 130  #> Laplace: 38781 BIC: 40425 AIC: 39477 lplc <- sapply(fit, laplace) plot(lplc, type=\"b\", xlab=\"Number of Dirichlet Components\", ylab=\"Model Fit\") (best <- fit[[which.min(lplc)]]) #> class: DMN  #> k: 4  #> samples x taxa: 278 x 130  #> Laplace: 38781 BIC: 40425 AIC: 39477 mixturewt(best) #>     pi theta #> 1 0.31    52 #> 2 0.17    19 #> 3 0.30    53 #> 4 0.22    30 head(mixture(best), 3) #>            [,1]    [,2]    [,3]    [,4] #> TS1.2   1.0e+00 2.1e-11 8.6e-06 3.3e-08 #> TS10.2  3.8e-08 3.3e-04 1.0e+00 2.8e-10 #> TS100.2 7.2e-09 8.8e-01 8.0e-13 1.2e-01 splom(log(fitted(best))) p0 <- fitted(fit[[1]], scale=TRUE) # scale by theta p4 <- fitted(best, scale=TRUE) colnames(p4) <- paste(\"m\", 1:4, sep=\"\") (meandiff <- colSums(abs(p4 - as.vector(p0)))) #>   m1   m2   m3   m4  #> 0.26 0.47 0.51 0.34 sum(meandiff) #> [1] 1.6 diff <- rowSums(abs(p4 - as.vector(p0))) o <- order(diff, decreasing=TRUE) cdiff <- cumsum(diff[o]) / sum(diff) df <- cbind(Mean=p0[o], p4[o,], diff=diff[o], cdiff) DT::datatable(df) |>     DT::formatRound(colnames(df), digits = 4) heatmapdmn(count, fit[[1]], best, 30)"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/articles/DirichletMultinomial.html","id":"generative-classifier","dir":"Articles","previous_headings":"","what":"Generative classifier","title":"DirichletMultinomial for Clustering and Classification of Microbiome Data","text":"following reads phenotypic information (‘Lean’, ‘Obese’, ‘Overweight’) sample. subset count data sub-counts, one phenotype. retain Lean Obese groups subsequent analysis. dmngroup function identifies best (minimum Laplace score) Dirichlet-multinomial model group. Lean group described model one component, Obese group model three components. Three four Dirichlet components original single group (best) model represented Obese group, Lean group. total Laplace score two group model less single-group model, indicating information gain considering groups separately. predict function assigns samples classes; confusion matrix shows classifier moderately effective. cvdmngroup function performs cross-validation. computationally expensive step. figure shows ROC curve single two-group classifier. single group classifier performing better two-group classifier.","code":"fl <- system.file(package=\"DirichletMultinomial\", \"extdata\", \"TwinStudy.t\") pheno0 <- scan(fl) lvls <- c(\"Lean\", \"Obese\", \"Overwt\") pheno <- factor(lvls[pheno0 + 1], levels=lvls) names(pheno) <- rownames(count) table(pheno) #> pheno #>   Lean  Obese Overwt  #>     61    193     24 counts <- lapply(levels(pheno), csubset, count, pheno) sapply(counts, dim) #>      [,1] [,2] [,3] #> [1,]   61  193   24 #> [2,]  130  130  130 keep <- c(\"Lean\", \"Obese\") count <- count[pheno %in% keep,] pheno <- factor(pheno[pheno %in% keep], levels=keep) if (full) {     bestgrp <- dmngroup(         count, pheno, k=1:5, verbose=TRUE, mc.preschedule=FALSE     )     save(bestgrp, file=file.path(tempdir(), \"bestgrp.rda\")) } else data(bestgrp) bestgrp #> class: DMNGroup  #> summary: #>       k samples taxa   NLE LogDet Laplace   BIC   AIC #> Lean  1      61  130  9066    162    9027  9333  9196 #> Obese 3     193  130 26770    407   26613 27801 27162 lapply(bestgrp, mixturewt) #> $Lean #>   pi theta #> 1  1    35 #>  #> $Obese #>     pi theta #> 1 0.53    45 #> 2 0.26    33 #> 3 0.22    18 c(     sapply(bestgrp, laplace),     'Lean+Obese' = sum(sapply(bestgrp, laplace)),     Single = laplace(best) ) #>       Lean      Obese Lean+Obese     Single  #>       9027      26613      35641      38781 xtabs(~pheno + predict(bestgrp, count, assign=TRUE)) #>        predict(bestgrp, count, assign = TRUE) #> pheno   Lean Obese #>   Lean    38    23 #>   Obese   15   178 if (full) {     ## full leave-one-out; expensive!     xval <- cvdmngroup(         nrow(count), count, c(Lean=1, Obese=3), pheno,         verbose=TRUE, mc.preschedule=FALSE     )     save(xval, file=file.path(tempdir(), \"xval.rda\")) } else data(xval) bst <- roc(pheno[rownames(count)] == \"Obese\", predict(bestgrp, count)[,\"Obese\"]) bst$Label <- \"Single\" two <- roc(pheno[rownames(xval)] == \"Obese\", xval[,\"Obese\"]) two$Label <- \"Two group\" both <- rbind(bst, two) pars <- list(superpose.line=list(col=.qualitative[1:2], lwd=2)) xyplot(     TruePostive ~ FalsePositive, group=Label, both,     type=\"l\", par.settings=pars,     auto.key=list(lines=TRUE, points=FALSE, x=.6, y=.1),     xlab=\"False Positive\", ylab=\"True Positive\" ) sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 22.04.5 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           #>  [3] LC_TIME=C.UTF-8        LC_COLLATE=C.UTF-8     #>  [5] LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              #>  [9] LC_ADDRESS=C           LC_TELEPHONE=C         #> [11] LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] parallel  stats4    stats     graphics  grDevices utils     #> [7] datasets  methods   base      #>  #> other attached packages: #> [1] lattice_0.22-6              DirichletMultinomial_1.47.2 #> [3] IRanges_2.38.1              S4Vectors_0.42.1            #> [5] BiocGenerics_0.50.0         BiocStyle_2.32.1            #>  #> loaded via a namespace (and not attached): #>  [1] cli_3.6.3           knitr_1.48          rlang_1.1.4         #>  [4] xfun_0.48           highr_0.11          textshaping_0.4.0   #>  [7] jsonlite_1.8.9      DT_0.33             htmltools_0.5.8.1   #> [10] ragg_1.3.3          sass_0.4.9          rmarkdown_2.28      #> [13] grid_4.4.1          crosstalk_1.2.1     evaluate_1.0.1      #> [16] jquerylib_0.1.4     fastmap_1.2.0       yaml_2.3.10         #> [19] lifecycle_1.0.4     bookdown_0.41       BiocManager_1.30.25 #> [22] compiler_4.4.1      fs_1.6.4            htmlwidgets_1.6.4   #> [25] systemfonts_1.1.0   digest_0.6.37       R6_2.5.1            #> [28] magrittr_2.0.3      bslib_0.8.0         tools_4.4.1         #> [31] pkgdown_2.1.1       cachem_1.1.0        desc_1.4.3"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Morgan. Author, maintainer.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Morgan M (2024). DirichletMultinomial: Dirichlet-Multinomial Mixture Model Machine Learning Microbiome Data. R package version 1.47.2, https://mtmorgan.github.io/DirichletMultinomial/.","code":"@Manual{,   title = {DirichletMultinomial: Dirichlet-Multinomial Mixture Model Machine Learning for Microbiome Data},   author = {Martin Morgan},   year = {2024},   note = {R package version 1.47.2},   url = {https://mtmorgan.github.io/DirichletMultinomial/}, }"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/index.html","id":"dirichletmultinomial","dir":"","previous_headings":"","what":"Dirichlet-Multinomial Mixture Model Machine Learning for Microbiome Data","title":"Dirichlet-Multinomial Mixture Model Machine Learning for Microbiome Data","text":"Dirichlet-multinomial mixture models can used describe variability microbial metagenomic data. package interface code originally made available Holmes, Harris, Quince, 2012, PLoS ONE 7(2): 1-15, discussed man page package, ?DirichletMultinomial.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Dirichlet-Multinomial Mixture Model Machine Learning for Microbiome Data","text":"Install DirichletMultinomial Bioconductor : Linux MacOS source-level installations require ‘gsl’ system dependency. Debian Ubuntu Fedora, CentOS RHEL macOS (source installations common macOS, step may usually necessary)","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"DirichletMultinomial\") sudo apt-get install -y libgsl-dev sudo yum install libgsl-devel brew install gsl"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/index.html","id":"use","dir":"","previous_headings":"","what":"Use","title":"Dirichlet-Multinomial Mixture Model Machine Learning for Microbiome Data","text":"See DirichletMultinomial Bioconductor landing page vignette use.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DMN-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Result fitting Dirichlet-Multinomial model.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DMN-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls dmn..","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DMN-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"contents slot usually retrieved via methods described   mixture help page.  goodnessOfFit NLE, LogDet, Laplace, AIC, BIC criteria       assessing goodness--fit. group matrix dimension samples x k,       providing Dirichlet parameter vectors. mixture Weight numeric() length k, relative \t  weight component. fit Lower matrix() dimension taxa x k \t  95% lower bounds Dirichlet component vector estimates. Estimate matrix() dimension taxa x k \t  Dirichlet component vector estimates. Upper matrix() dimension taxa x k \t  95% upper bounds Dirichlet component vector estimates.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DMN-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"See mixture help page.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DMN-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Martin Morgan mailto:mtmorgan.xyz@gmail.com","code":""},{"path":[]},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DMN-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"data(fit) fit[[4]] #> class: DMN  #> k: 4  #> samples x taxa: 278 x 130  #> Laplace: 38781.1 BIC: 40425.31 AIC: 39476.69"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DMNGroup-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Result fitting Dirichlet-Multinomial generative classifier.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DMNGroup-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls dmngroup.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DMNGroup-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"slots class inheritted SimpleList; see   ‘Methods’, , information manipulate   object.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DMNGroup-class.html","id":"extends","dir":"Reference","previous_headings":"","what":"Extends","title":"Class ","text":"Class \"SimpleList\", directly.   Class \"List\", class \"SimpleList\", distance 2.   Class \"Vector\", class \"SimpleList\", distance 3.   Class \"Annotated\", class \"SimpleList\", distance 4.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DMNGroup-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"See mixture help page functions operate   DMNGroup DMN. DMNGroup can manipulated list; see   SimpleList  description typical   list-like functions.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DMNGroup-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class ","text":"Martin Morgan mailto:mtmorgan.xyz@gmail.com","code":""},{"path":[]},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DMNGroup-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class ","text":"","code":"data(bestgrp) bestgrp #> class: DMNGroup  #> summary: #>       k samples taxa       NLE   LogDet   Laplace       BIC       AIC #> Lean  1      61  130  9065.657 162.3513  9027.371  9332.864  9195.657 #> Obese 3     193  130 26769.931 407.4130 26613.414 27801.418 27161.931 bestgrp[[1]] #> class: DMN  #> k: 1  #> samples x taxa: 61 x 130  #> Laplace: 9027.371 BIC: 9332.864 AIC: 9195.657"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DirichletMultinomial-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Dirichlet-Multinomial Mixture Model Machine Learning for Microbiome Data — DirichletMultinomial-package","title":"Dirichlet-Multinomial Mixture Model Machine Learning for Microbiome Data — DirichletMultinomial-package","text":"Dirichlet-multinomial mixture models can used describe   variability microbial metagenomic data. package   interface code originally made available Holmes, Harris,   Qunice, 2012, PLoS ONE 7(2): 1-15.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DirichletMultinomial-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dirichlet-Multinomial Mixture Model Machine Learning for Microbiome Data — DirichletMultinomial-package","text":"estimation routine LGPL-licensed (stated   corresponding googlecode page) source   http://microbedmm.googlecode.com/files/MicrobeDMMv1.0.tar.gz,   retrieved 17 Feburary 2012. algorithm described Holmes , Harris K, Quince C, 2012   Dirichlet Multinomial Mixtures: Generative Models Microbial   Metagenomics. PLoS ONE 7(2): e30126. doi:10.1371/journal.pone.0030126.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/DirichletMultinomial-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dirichlet-Multinomial Mixture Model Machine Learning for Microbiome Data — DirichletMultinomial-package","text":"Maintainer: Martin Morgan mailto:mtmorgan.xyz@gmail.com","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/cvdmngroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-validation on Dirichlet-Multinomial classifiers. — cvdmngroup","title":"Cross-validation on Dirichlet-Multinomial classifiers. — cvdmngroup","text":"Run cross-validation Dirichlet-Multinomial generative classifiers.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/cvdmngroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-validation on Dirichlet-Multinomial classifiers. — cvdmngroup","text":"","code":"cvdmngroup(ncv, count, k, z, ..., verbose = FALSE,     .lapply = parallel::mclapply)"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/cvdmngroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-validation on Dirichlet-Multinomial classifiers. — cvdmngroup","text":"ncv integer(1) number cross-validation groups,     2 nrow(count). count matrix sample x taxon counts, subsets     used training cross-validation. k named integer() vector groups number     Dirichlet components; e.g., c(Lean=1, Obese=3) performs     cross-validation models k=1 Dirichlet components     ‘Lean’ group, k=3 Dirichlet components     ‘Obese’. z True group assignment. ... Additional arguments, passed dmn     cross-validation. verbose logical(1) indicating whether progress     reported .lapply function used perform outer cross-vaildation     loop, e.g., lapply calculation single processor,     parallel::mclapply parallel evaluation.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/cvdmngroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross-validation on Dirichlet-Multinomial classifiers. — cvdmngroup","text":"data.frame summarizing classifications test samples   cross-validation groups. Columns :  group cross-validation group indivdual     used testing. additional columns Named classification groups, giving     posterior probability assignment.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/cvdmngroup.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cross-validation on Dirichlet-Multinomial classifiers. — cvdmngroup","text":"Martin Morgan mailto:mtmorgan.xyz@gmail.com","code":""},{"path":[]},{"path":[]},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dataobjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Data objects used for examples and the vignette — data","title":"Data objects used for examples and the vignette — data","text":"data objects correspond steps typical work flow,   described vignette package. fit corresponds   dmn fits different values k. bestgroup   result two-group generative classifier. xval   summarizes leave-one-cross validation classifier.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dataobjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data objects used for examples and the vignette — data","text":"","code":"data(fit) data(bestgrp) data(xval)"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dataobjects.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data objects used for examples and the vignette — data","text":"fit list seven DMN objects. bestgrp DMNGroup object. xval data.frame columns corresponding   cross-validation group membership Lean Obese posterior   probabilities.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dataobjects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data objects used for examples and the vignette — data","text":"","code":"data(fit); fit[1:2] #> [[1]] #> class: DMN  #> k: 1  #> samples x taxa: 278 x 130  #> Laplace: 39227.36 BIC: 39527.91 AIC: 39292.11  #>  #> [[2]] #> class: DMN  #> k: 2  #> samples x taxa: 278 x 130  #> Laplace: 38872.68 BIC: 39588.93 AIC: 39115.53  #>  plot(sapply(fit, laplace), type=\"b\")  data(bestgrp); bestgrp #> class: DMNGroup  #> summary: #>       k samples taxa       NLE   LogDet   Laplace       BIC       AIC #> Lean  1      61  130  9065.657 162.3513  9027.371  9332.864  9195.657 #> Obese 3     193  130 26769.931 407.4130 26613.414 27801.418 27161.931 data(xval); head(xval, 3) #>         group         Lean     Obese #> TS119.2     1 0.0001132595 0.9998867 #> TS5         2 0.0047642534 0.9952357 #> TS72        3 0.6170744622 0.3829255"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmn.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Dirichlet-Multinomial models to count data. — dmn","title":"Fit Dirichlet-Multinomial models to count data. — dmn","text":"Fit Dirichlet-Multinomial models sample x taxon count matrix.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Dirichlet-Multinomial models to count data. — dmn","text":"","code":"dmn(count, k, verbose = FALSE, seed = runif(1, 0, .Machine$integer.max))"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Dirichlet-Multinomial models to count data. — dmn","text":"count matrix() sample x taxon counts. k integer(1), number Dirichlet components fit. verbose logical(1) indicating whether progress fit     reported. seed numeric(1) random number seed.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit Dirichlet-Multinomial models to count data. — dmn","text":"implements Dirichlet-multinomial mixture models describe   package help page, DirichletMultinomial-package.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Dirichlet-Multinomial models to count data. — dmn","text":"object class dmn, elements (elements usually   retrieved via functions defined package, directly).  GoodnessOfFit NLE, LogDet, Laplace, AIC, BIC criteria     assessing goodness--fit. Group matrix dimension samples x k,   providing Dirichlet parameter vectors. Mixture Weight numeric() length k, relative \tweight component. Fit Lower matrix() dimension taxa x k \t  95% lower bounds Dirichlet component vector estimates. Estimate matrix() dimension taxa x k \t  Dirichlet component vector estimates. Upper matrix() dimension taxa x k \t  95% upper bounds Dirichlet component vector estimates.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmn.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit Dirichlet-Multinomial models to count data. — dmn","text":"Holmes , Harris K, Quince C, 2012 Dirichlet Multinomial Mixtures:   Generative Models Microbial Metagenomics. PLoS ONE 7(2):   e30126. doi:10.1371/journal.pone.0030126.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmn.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit Dirichlet-Multinomial models to count data. — dmn","text":"Martin Morgan mailto:mtmorgan.xyz@gmail.com","code":""},{"path":[]},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Dirichlet-Multinomial models to count data. — dmn","text":"","code":"data(fit) ## k = 1:7; full example in vignette lplc <- sapply(fit, laplace) plot(lplc, type=\"b\")  fit[[which.min(lplc)]] #> class: DMN  #> k: 4  #> samples x taxa: 278 x 130  #> Laplace: 38781.1 BIC: 40425.31 AIC: 39476.69"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmngroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Dirichlet-Multinomial generative classifiers. — dmngroup","title":"Dirichlet-Multinomial generative classifiers. — dmngroup","text":"Fit Dirichlet-Multinomial generative classifiers groups (rows)   within sample x taxon count matrix.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmngroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dirichlet-Multinomial generative classifiers. — dmngroup","text":"","code":"dmngroup(count, group, k, ..., simplify = TRUE,     .lapply = parallel::mclapply)"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmngroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dirichlet-Multinomial generative classifiers. — dmngroup","text":"count matrix() sample x taxon counts. group factor() vector coerced factor,     many elements rows count, indicating     group corresponding sample belongs. k integer(), number(s) Dirichlet components     fit. ... Additional arguments, passed dmn. simplify Return best-fit model group? .lapply lapply-like function application group     x k fits.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmngroup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dirichlet-Multinomial generative classifiers. — dmngroup","text":"function divided count groups defined   group, creates combinations group x k,   evaluates using dmn. simplify=TRUE,   best (Laplace) fit selected group.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmngroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dirichlet-Multinomial generative classifiers. — dmngroup","text":"object class dmngroup, list fitted models class   dmn. simplify=TRUE, elements named   group correspond.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmngroup.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dirichlet-Multinomial generative classifiers. — dmngroup","text":"Holmes , Harris K, Quince C, 2012 Dirichlet Multinomial Mixtures:   Generative Models Microbial Metagenomics. PLoS ONE 7(2):   e30126. doi:10.1371/journal.pone.0030126.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmngroup.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dirichlet-Multinomial generative classifiers. — dmngroup","text":"Martin Morgan mailto:mtmorgan.xyz@gmail.com","code":""},{"path":[]},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/dmngroup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dirichlet-Multinomial generative classifiers. — dmngroup","text":"","code":"## best fit for groups 'Lean' and 'Obese'; full example in vignette. if (FALSE) bestgrp <- dmngroup(count, pheno, k=1:5, verbose=TRUE,                      mc.preschedule=FALSE)  # \\dontrun{} data(bestgrp) bestgrp #> class: DMNGroup  #> summary: #>       k samples taxa       NLE   LogDet   Laplace       BIC       AIC #> Lean  1      61  130  9065.657 162.3513  9027.371  9332.864  9195.657 #> Obese 3     193  130 26769.931 407.4130 26613.414 27801.418 27161.931 bestgrp[[\"Obese\"]] #> class: DMN  #> k: 3  #> samples x taxa: 193 x 130  #> Laplace: 26613.41 BIC: 27801.42 AIC: 27161.93"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/fitted.html","id":null,"dir":"Reference","previous_headings":"","what":"Access model components. — model components","title":"Access model components. — model components","text":"accessors mixture mixturewt return information   estimated Dirichlet components fitted   model. Return values described Values section, .","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/fitted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access model components. — model components","text":"","code":"mixture(object, ..., assign=FALSE) mixturewt(object, ...) goodnessOfFit(object, ...) laplace(object, ...) # S4 method for class 'DMN' AIC(object, ..., k = 2) # S4 method for class 'DMN' BIC(object, ...)  # S4 method for class 'DMN' fitted(object, ..., scale=FALSE) # S4 method for class 'DMN' predict(object, newdata, ..., logevidence=FALSE) # S4 method for class 'DMNGroup' fitted(object, ...) # S4 method for class 'DMNGroup' predict(object, newdata, ..., assign=FALSE) # S4 method for class 'DMNGroup' summary(object, ...)"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/fitted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access model components. — model components","text":"object instance class dmn. newdata matrix new sample x taxon data fitted     model object. ... Additional arguments, available methods,     applicable. assign logical(1) indicating whether maximum     per-sample mixture component returned     (assign=FALSE), full mixture matrix     (assign=TRUE). scale logical(1) indicating whether fitted values     returned unscaled (default, scaled=FALSE) scaled     variability mixturewt parameter theta. logevidence logical(1) indicating whether posterior     probability (default, logevidence=FALSE) log evidence     logical=TRUE returned. k ignored.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/fitted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access model components. — model components","text":"mixture assign=FALSE returns matrix sample x   Dirichlet component estimates. assign=TRUE mixture   returns named vector indexing maximal Dirichlet component   sample. mixturewt returns matrix rows corresponding mixture   components, columns pi (component weight) theta   (component variability). Small values theta correspond   highly variable components. goodnessOfFit returns named numeric vector measures   goodness fit. laplace, AIC, BIC return corresponding   measures goodness fit.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/fitted.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Access model components. — model components","text":"Martin Morgan mailto:mtmorgan.xyz@gmail.com","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/fitted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access model components. — model components","text":"","code":"data(fit) best <- fit[[4]] mixturewt(best) #>          pi    theta #> 1 0.3108456 52.03706 #> 2 0.1665874 18.72599 #> 3 0.3027727 53.29525 #> 4 0.2197943 30.19582 head(mixture(best), 3) #>                 [,1]         [,2]         [,3]         [,4] #> TS1.2   9.999914e-01 2.117284e-11 8.563935e-06 3.306464e-08 #> TS10.2  3.776510e-08 3.268129e-04 9.996731e-01 2.847131e-10 #> TS100.2 7.214444e-09 8.825346e-01 7.953749e-13 1.174654e-01 head(mixture(best, assign=TRUE), 3) #>   TS1.2  TS10.2 TS100.2  #>       1       3       2  goodnessOfFit(best) #>        NLE     LogDet    Laplace        BIC        AIC  #> 38953.6920   616.0335 38781.1039 40425.3149 39476.6920   fl <- system.file(package=\"DirichletMultinomial\", \"extdata\",                   \"Twins.csv\") count <- t(as.matrix(read.csv(fl, row.names=1))) data(bestgrp) bestgrp #> class: DMNGroup  #> summary: #>       k samples taxa       NLE   LogDet   Laplace       BIC       AIC #> Lean  1      61  130  9065.657 162.3513  9027.371  9332.864  9195.657 #> Obese 3     193  130 26769.931 407.4130 26613.414 27801.418 27161.931 head(predict(bestgrp, count)) #>                 Lean      Obese #> TS1.2   9.648780e-01 0.03512197 #> TS10.2  1.000058e-03 0.99899994 #> TS100.2 3.522984e-08 0.99999996 #> TS100   3.290371e-05 0.99996710 #> TS101.2 7.349397e-08 0.99999993 #> TS103.2 1.679035e-02 0.98320965"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/heatmapdmn.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap representation of samples assigned to Dirichlet components. — heatmapdmn","title":"Heatmap representation of samples assigned to Dirichlet components. — heatmapdmn","text":"Produce heat map summarizing count data, grouped Dirichlet component.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/heatmapdmn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap representation of samples assigned to Dirichlet components. — heatmapdmn","text":"","code":"heatmapdmn(count, fit1, fitN, ntaxa = 30, ...,     transform = sqrt, lblwidth = 0.2 * nrow(count), col = .gradient)"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/heatmapdmn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heatmap representation of samples assigned to Dirichlet components. — heatmapdmn","text":"count matrix sample x taxon counts, supplied     dmn. fit1 instance class dmn, model fit     single Dirichlet component, k=1 dmn. fitN instance class dmn, model fit     N != 1 components, k=N dmn. ntaxa ntaxa numerous taxa display counts . ... Additional arguments, ignored. transform Transformation apply count data prior     visualization; influence mixture membership     taxnomic ordering. lblwidth proportion plot dedicate taxanomic     labels, fraction number samples plotted. col colors used display (possibly transformed,     transform) count data, used image.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/heatmapdmn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Heatmap representation of samples assigned to Dirichlet components. — heatmapdmn","text":"Columns heat map correspond samples. Samples grouped   Dirichlet component, average (Dirichlet) components summarized   separate wide column. Rows correspond taxonomic groups, ordered   based contribution Dirichlet components.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/heatmapdmn.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Heatmap representation of samples assigned to Dirichlet components. — heatmapdmn","text":"Martin Morgan mailto:mtmorgan.xyz@gmail.com","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/heatmapdmn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heatmap representation of samples assigned to Dirichlet components. — heatmapdmn","text":"","code":"## counts fl <- system.file(package=\"DirichletMultinomial\", \"extdata\",                   \"Twins.csv\") count <- t(as.matrix(read.csv(fl, row.names=1)))  ## all and best-fit clustering data(fit) lplc <- sapply(fit, laplace) best <- fit[[which.min(lplc)]]  heatmapdmn(count, fit[[1]], best, 30)"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/roc.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize receiver-operator characteristics — roc","title":"Summarize receiver-operator characteristics — roc","text":"Returns data.frame summarizing cummulative true-   false-positive probabilities expected observed   classifications.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/roc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize receiver-operator characteristics — roc","text":"","code":"roc(exp, obs, ...)"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/roc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize receiver-operator characteristics — roc","text":"exp logical() vector expected classifications   particular group. obs Predicted probability assignment group identified     TRUE values exp. length exp     obs must identical. ... Additional arguments, available methods.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/roc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize receiver-operator characteristics — roc","text":"data.frame columns  TruePositive Cummulative probability correct assignment. FalsePositive Cummulative probability incorrect assignment.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/roc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarize receiver-operator characteristics — roc","text":"Martin Morgan mailto:mtmorgan.xyz@gmail.com","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/roc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize receiver-operator characteristics — roc","text":"","code":"library(lattice)  ## count matrix fl <- system.file(package=\"DirichletMultinomial\", \"extdata\",                   \"Twins.csv\") count <- t(as.matrix(read.csv(fl, row.names=1)))  ## phenotype fl <- system.file(package=\"DirichletMultinomial\", \"extdata\",                   \"TwinStudy.t\") pheno0 <- scan(fl) lvls <- c(\"Lean\", \"Obese\", \"Overwt\") pheno <- factor(lvls[pheno0 + 1], levels=lvls) names(pheno) <- rownames(count)  ## count data used for cross-validation, and cross-validation count <- csubset(c(\"Lean\", \"Obese\"), count, pheno) data(bestgrp)  ## true, false positives from single-group classifier bst <- roc(pheno[rownames(count)] == \"Obese\",            predict(bestgrp, count)[,\"Obese\"]) head(bst) #>   TruePostive FalsePositive #> 1 0.005181347             0 #> 2 0.010362694             0 #> 3 0.015544041             0 #> 4 0.020725389             0 #> 5 0.025906736             0 #> 6 0.031088083             0  ## lattice plot xyplot(TruePostive ~ FalsePositive, bst, type=\"l\",        xlab=\"False Positive\", ylab=\"True Positive\")"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/util.html","id":null,"dir":"Reference","previous_headings":"","what":"Helpful utility functions — Utilities","title":"Helpful utility functions — Utilities","text":"csubset creates subset count matrix, based identity   column phenotypes specified value.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/util.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helpful utility functions — Utilities","text":"","code":"csubset(val, x, pheno, cidx = TRUE)"},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/util.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helpful utility functions — Utilities","text":"val character(1) specifying subset     phenotype select. x matrix counts, rows corresponding samples     columns taxonomic groups. pheno character() vector length equal number     rows count, indicating phenotype     corresponding sample. cidx logical(1) indicating whether columns (taxa)     zero counts count matrix following removal taxa     satisfying pheno %% val removed.     cidx=FALSE removes 0-count columns.","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/util.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helpful utility functions — Utilities","text":"matrix counts, rows satisfying pheno %%   val columns equal either ncol(x) (  cidx=TRUE) number columns non-zero counts   row subsetting (cidx=FALSE).","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/util.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helpful utility functions — Utilities","text":"Martin Morgan mailto:mtmorgan.xyz@gmail.com","code":""},{"path":"https://mtmorgan.github.io/DirichletMultinomial/reference/util.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helpful utility functions — Utilities","text":"","code":"## count matrix fl <- system.file(package=\"DirichletMultinomial\", \"extdata\",                   \"Twins.csv\") count <- t(as.matrix(read.csv(fl, row.names=1)))  ## phenotype fl <- system.file(package=\"DirichletMultinomial\", \"extdata\",                   \"TwinStudy.t\") pheno0 <- scan(fl) lvls <- c(\"Lean\", \"Obese\", \"Overwt\") pheno <- factor(lvls[pheno0 + 1], levels=lvls) names(pheno) <- rownames(count)  ## subset dim(count) #> [1] 278 130 sum(\"Lean\" == pheno) #> [1] 61 dim(csubset(\"Lean\", count, pheno)) #> [1]  61 130 dim(csubset(\"Lean\", count, pheno, cidx=FALSE)) #> [1]  61 106"}]
